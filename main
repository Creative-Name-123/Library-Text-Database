import tkinter
from tkinter import *
from tkinter import scrolledtext
variable = 0

# Opening the list of books
books = open("books.txt", "r+").read()
book_list = books.split("\n")

# Opening the list of authors
authors = open("authors.txt", "r+").read()
author_list = authors.split("\n")

# Opening the list of types
types = open("types.txt", "r+").read()
type_list = types.split("\n")

# Opening the list of ISBNs
ISBNs = open("ISBNs.txt", "r+").read()
ISBN_list = ISBNs.split("\n")


def print_stuff():
    global books
    global book_list
    global authors
    global author_list
    global types
    global type_list
    global ISBNs
    global ISBN_list
    books = open("books.txt", "r+").read()
    book_list = books.split("\n")
    authors = open("authors.txt", "r+").read()
    author_list = authors.split("\n")
    types = open("types.txt", "r+").read()
    type_list = types.split("\n")
    ISBNs = open("ISBNs.txt", "r+").read()
    ISBN_list = ISBNs.split("\n")
    list_window = Toplevel()
    list_window.title("Entries:")
    list_area = scrolledtext.ScrolledText(list_window, wrap=tkinter.WORD, width=60, height=20)
    for i in range(len(book_list)):
        if type_list[i] == "Book":
            list_area.insert(END, str(i) + ". " + book_list[i])
            list_area.insert(END, "\n      By " + author_list[i] + " (" + type_list[i] + ")" + "(ISBN: " + ISBN_list[i] + ")")
        elif type_list[i] == "Movie":
            list_area.insert(END, str(i) + ". " + book_list[i])
            list_area.insert(END, "\n      Directed by " + author_list[i] + " (" + type_list[i] + ")")
        else:
            list_area.insert(END, str(i) + ". " + book_list[i])
            list_area.insert(END, "\n      By " + author_list[i] + " (" + type_list[i] + ")")
        list_area.insert(END, "\n")
    list_area.pack(fill=BOTH, side=LEFT, expand=TRUE)
    open("books.txt", "r+").close()
    open("authors.txt", "r+").close()
    open("types.txt", "r+").close()
    open("ISBNs.txt", "r+").close()
    return "nothing"


def edit_book():
    with open("books.txt", "r") as file:
        lines = file.readlines()
        file.close()
    if len(bookNumberInputArea.get("1.0", "end-1c")) > 0 and len(bookTitleInputArea.get("1.0", "end-1c")) > 0:
        try:
            int(bookNumberInputArea.get("1.0", "end-1c"))
        except():
            print("no")
        else:
            if int(bookNumberInputArea.get("1.0", "end-1c")) <= len(lines):
                if bookISBNInputArea.get("1.0", "end-1c") in ISBN_list:  # If inputted value is a duplicate
                    error_window = Toplevel()
                    error_window.title("Error:")
                    error_area = scrolledtext.ScrolledText(error_window, wrap=tkinter.WORD, width=25, height=5,bg="red")
                    error_area.insert(END, "Duplicate book name")
                    error_area.pack(fill=BOTH, side=LEFT, expand=TRUE)
                else:
                    lines[int(bookNumberInputArea.get("1.0", "end-1c"))] = bookTitleInputArea.get("1.0", "end-1c") + "\n"
    with open("books.txt", "w+") as file:
        for line in lines:
            file.write(line)
            print(line)
        file.close()
    return "nothing"


def edit_author():
    with open("authors.txt", "r") as file:
        lines = file.readlines()
        file.close()
    if len(bookNumberAuthorInputArea.get("1.0", "end-1c")) > 0 and len(bookAuthorInputArea.get("1.0", "end-1c")) > 0:
        try:
            int(bookNumberAuthorInputArea.get("1.0", "end-1c"))
        except():
            print("no")
        else:
            if int(bookNumberAuthorInputArea.get("1.0", "end-1c")) <= len(lines):
                lines[int(bookNumberAuthorInputArea.get("1.0", "end-1c"))] = bookAuthorInputArea.get("1.0", "end-1c") + "\n"
    with open("authors.txt", "w+") as file:
        for line in lines:
            file.write(line)
            print(line)
        file.close()
    return "nothing"


def edit_type():
    with open("types.txt", "r") as file:
        lines = file.readlines()
        file.close()
    if len(bookNumberTypeInputArea.get("1.0", "end-1c")) > 0 and len(bookTypeInputArea.get("1.0", "end-1c")) > 0:
        try:
            int(bookNumberTypeInputArea.get("1.0", "end-1c"))
        except():
            print("no")
        else:
            if int(bookNumberTypeInputArea.get("1.0", "end-1c")) <= len(lines):
                lines[int(bookNumberTypeInputArea.get("1.0", "end-1c"))] = bookTypeInputArea.get("1.0", "end-1c") + "\n"
    with open("types.txt", "w+") as file:
        for line in lines:
            file.write(line)
            print(line)
        file.close()
    return "nothing"


def edit_isbn():
    with open("ISBNs.txt", "r") as file:
        lines = file.readlines()
        file.close()
    if len(bookNumberISBNInputArea.get("1.0", "end-1c")) > 0:
        try:
            int(bookNumberISBNInputArea.get("1.0", "end-1c"))
        except():
            print("no")
        else:
            if int(bookNumberISBNInputArea.get("1.0", "end-1c")) <= len(lines):
                print(ISBN_list)
                print(bookISBNInputArea.get("1.0", "end-1c")[0])
                print(int(bookISBNInputArea.get("1.0", "end-1c")[0]) + int(bookISBNInputArea.get("1.0", "end-1c")[1])*3 + int(bookISBNInputArea.get("1.0", "end-1c")[2]) + int(bookISBNInputArea.get("1.0", "end-1c")[3])*3 + int(bookISBNInputArea.get("1.0", "end-1c")[4]) + int(bookISBNInputArea.get("1.0", "end-1c")[5])*3 + int(bookISBNInputArea.get("1.0", "end-1c")[6]) + int(bookISBNInputArea.get("1.0", "end-1c")[7])*3 + int(bookISBNInputArea.get("1.0", "end-1c")[8]) + int(bookISBNInputArea.get("1.0", "end-1c")[9])*3 + int(bookISBNInputArea.get("1.0", "end-1c")[10]) + int(bookISBNInputArea.get("1.0", "end-1c")[11])*3)
                # ISBN-13 checker
                if int(bookISBNInputArea.get("1.0", "end-1c")[0]) == 9 and int(bookISBNInputArea.get("1.0", "end-1c")[1]) == 7 and (int(bookISBNInputArea.get("1.0", "end-1c")[2]) == 8 or int(bookISBNInputArea.get("1.0", "end-1c")[2]) == 9) and (int(bookISBNInputArea.get("1.0", "end-1c")[0]) + int(bookISBNInputArea.get("1.0", "end-1c")[1])*3 + int(bookISBNInputArea.get("1.0", "end-1c")[2]) + int(bookISBNInputArea.get("1.0", "end-1c")[3])*3 + int(bookISBNInputArea.get("1.0", "end-1c")[4]) + int(bookISBNInputArea.get("1.0", "end-1c")[5])*3 + int(bookISBNInputArea.get("1.0", "end-1c")[6]) + int(bookISBNInputArea.get("1.0", "end-1c")[7])*3 + int(bookISBNInputArea.get("1.0", "end-1c")[8]) + int(bookISBNInputArea.get("1.0", "end-1c")[9])*3 + int(bookISBNInputArea.get("1.0", "end-1c")[10]) + int(bookISBNInputArea.get("1.0", "end-1c")[11])*3 + int(bookISBNInputArea.get("1.0", "end-1c")[12])) % 10 == 0 and len(bookISBNInputArea.get("1.0", "end-1c")) == 13:
                    if bookISBNInputArea.get("1.0", "end-1c") in ISBN_list:  # If inputted value is a duplicate
                        error_window = Toplevel()
                        error_window.title("Error:")
                        error_area = scrolledtext.ScrolledText(error_window, wrap=tkinter.WORD, width=25, height=5, bg="red")
                        error_area.insert(END, "Duplicate ISBN code")
                        error_area.pack(fill=BOTH, side=LEFT, expand=TRUE)
                    else:
                        lines[int(bookNumberISBNInputArea.get("1.0", "end-1c"))] = bookISBNInputArea.get("1.0", "end-1c") + "\n"
                else:
                    error_window = Toplevel()
                    error_window.title("Error:")
                    error_area = scrolledtext.ScrolledText(error_window, wrap=tkinter.WORD, width=25, height=5, bg="red")
                    error_area.insert(END, "Invalid ISBN-13 code")
                    error_area.pack(fill=BOTH, side=LEFT, expand=TRUE)
    with open("ISBNs.txt", "w+") as file:
        for line in lines:
            file.write(line)
            print(line)
        file.close()
    return "nothing"


def save_new_entry():
    with open("books.txt", "a+") as books_file:
        with open("authors.txt", "a+") as authors_file:
            with open("types.txt", "a+") as types_file:
                with open("ISBNs.txt", "a+") as ISBNs_file:
                    if len(newTitle.get("1.0", "end-1c")) > 0 and len(newAuthor.get("1.0", "end-1c")) > 0 and len(newType.get("1.0", "end-1c")) > 0:
                        print(newTitle.get("1.0", "end-1c"))
                        if newTitle.get("1.0", "end-1c") in books_file.read():
                            error_window = Toplevel()
                            error_window.title("Error:")
                            error_area = scrolledtext.ScrolledText(error_window, wrap=tkinter.WORD, width=25, height=5,bg="red")
                            error_area.insert(END, "Duplicate book name")
                            error_area.pack(fill=BOTH, side=LEFT, expand=TRUE)
                        elif newType.get("1.0", "end-1c") == "Book":
                            if len(newISBN.get("1.0", "end-1c")) == 13:
                                print(newISBN.get("1.0", "end-1c"))  # Test
                                if int(newISBN.get("1.0", "end-1c")[0]) == 9 and int(newISBN.get("1.0", "end-1c")[1]) == 7 and (int(newISBN.get("1.0", "end-1c")[2]) == 8 or int(newISBN.get("1.0", "end-1c")[2]) == 9) and (int(newISBN.get("1.0", "end-1c")[0]) + int(newISBN.get("1.0", "end-1c")[1])*3 + int(newISBN.get("1.0", "end-1c")[2]) + int(newISBN.get("1.0", "end-1c")[3])*3 + int(newISBN.get("1.0", "end-1c")[4]) + int(newISBN.get("1.0", "end-1c")[5])*3 + int(newISBN.get("1.0", "end-1c")[6]) + int(newISBN.get("1.0", "end-1c")[7])*3 + int(newISBN.get("1.0", "end-1c")[8]) + int(newISBN.get("1.0", "end-1c")[9])*3 + int(newISBN.get("1.0", "end-1c")[10]) + int(newISBN.get("1.0", "end-1c")[11])*3 + int(newISBN.get("1.0", "end-1c")[12])) % 10 == 0:
                                    if newISBN.get("1.0", "end-1c") in ISBNs_file.read():
                                        error_window = Toplevel()
                                        error_window.title("Error:")
                                        error_area = scrolledtext.ScrolledText(error_window, wrap=tkinter.WORD, width=25, height=5, bg="red")
                                        error_area.insert(END, "Duplicate ISBN code")
                                        error_area.pack(fill=BOTH, side=LEFT, expand=TRUE)
                                    else:
                                        books_file.write("\n" + newTitle.get("1.0", "end-1c"))
                                        authors_file.write("\n" + newAuthor.get("1.0", "end-1c"))
                                        types_file.write("\n" + newType.get("1.0", "end-1c"))
                                        ISBNs_file.write("\n" + newISBN.get("1.0", "end-1c"))
                                else:
                                    error_window = Toplevel()
                                    error_window.title("Error:")
                                    error_area = scrolledtext.ScrolledText(error_window, wrap=tkinter.WORD, width=25, height=5, bg="red")
                                    error_area.insert(END, "Invalid ISBN-13 code")
                                    error_area.pack(fill=BOTH, side=LEFT, expand=TRUE)
                            else:
                                error_window = Toplevel()
                                error_window.title("Error:")
                                error_area = scrolledtext.ScrolledText(error_window, wrap=tkinter.WORD, width=25, height=5, bg="red")
                                error_area.insert(END, "Invalid ISBN-13 code")
                                error_area.pack(fill=BOTH, side=LEFT, expand=TRUE)
                        else:
                            books_file.write("\n" + newTitle.get("1.0", "end-1c"))
                            authors_file.write("\n" + newAuthor.get("1.0", "end-1c"))
                            types_file.write("\n" + newType.get("1.0", "end-1c"))
                            ISBNs_file.write("\n?")
                    books_file.close()
                    authors_file.close()
                    types_file.close()
                    ISBNs_file.close()


def delete_entry():
    len_list = 0
    rebuilding_book_list = []
    rebuilding_author_list = []
    rebuilding_type_list = []
    rebuilding_isbn_list = []
    with open("books.txt", "r+") as books_file:
        with open("authors.txt", "r+") as authors_file:
            with open("types.txt", "r+") as types_file:
                with open("ISBNs.txt", "r+") as ISBNs_file:
                    with open("books.txt", "r+") as books_file_2:
                        with open("authors.txt", "r+") as authors_file_2:
                            with open("types.txt", "r+") as types_file_2:
                                if deletePosition.get("1.0", "end-1c").isdigit():
                                    if 0 <= int(deletePosition.get("1.0", "end-1c")) <= len(books_file_2.read())-1:
                                        for i in range(len(authors_file_2.read())):
                                            if not i == int(deletePosition.get("1.0", "end-1c")) and not types_file_2.readline() == "":
                                                rebuilding_book_list.append(books_file.readline())
                                                rebuilding_author_list.append(authors_file.readline())
                                                rebuilding_type_list.append(types_file.readline())
                                                rebuilding_isbn_list.append(ISBNs_file.readline())
                                                len_list += 1
                                            else:
                                                books_file.readline()
                                                authors_file.readline()
                                                types_file.readline()
                                                ISBNs_file.readline()
                                        with open("books.txt", "w+") as books_file_w:
                                            with open("authors.txt", "w+") as authors_file_w:
                                                with open("types.txt", "w+") as types_file_w:
                                                    with open("ISBNs.txt", "w+") as ISBNs_file_w:
                                                        for i in range(len_list):
                                                            books_file_w.write(rebuilding_book_list[i])
                                                            authors_file_w.write(rebuilding_author_list[i])
                                                            types_file_w.write(rebuilding_type_list[i])
                                                            ISBNs_file_w.write(rebuilding_isbn_list[i])
                                                        if int(deletePosition.get("1.0", "end-1c")) == len(books_file_2.read())-1:
                                                            with open("books.txt", "w") as books_file_w2:
                                                                with open("authors.txt", "w") as authors_file_w2:
                                                                    with open("types.txt", "w") as types_file_w2:
                                                                        with open("ISBNs.txt", "w") as ISBNs_file_w2:
                                                                            for i in range(len_list-1):
                                                                                if books_file_w.read().strip():
                                                                                    books_file_w2.write(books_file_w.readline())
                                                            books_file_w2.close()
                                                            authors_file_w2.close()
                                                            types_file_w2.close()
                                                            ISBNs_file_w2.close()
                                                        books_file_w.close()
                                                        authors_file_w.close()
                                                        types_file_w.close()
                                                        ISBNs_file_w.close()
                                books_file.close()
                                authors_file.close()
                                types_file.close()
                                ISBNs_file.close()
                                books_file_2.close()
                                authors_file_2.close()
                                types_file_2.close()



def secret_command():
    global variable
    variable += 1
    secret_window = Toplevel()
    secret_window.title("Easter Egg")
    secret_area = scrolledtext.ScrolledText(secret_window, wrap=tkinter.WORD, width=30, height=5, bg="orange")
    if variable == 1:
        secret_area.insert(END, "You've pressed the ? button one time!")
    else:
        secret_area.insert(END, "You've pressed the ? button " + str(variable) + " times!")
    secret_area.pack(fill=BOTH, side=LEFT, expand=TRUE)


# Creating a tkinter window
root = Tk()
root.geometry('500x600')
root.title("Library Database")

# Creating the See Books button
btnSeeBooks = Button(root, text="See all entries", command=print_stuff, cursor="hand2")
btnSeeBooks.place(x=5, y=5)

# Creating the edit a book button
btnEditABook = Button(root, text="Save name edits (box 1 is the entry number; box 2 is the new name)", command=edit_book, cursor="hand2")
btnEditABook.place(x=5, y=35)

# Creating input areas for editing books
bookNumberInputArea = Text(root, height=1, width=3, bg="light yellow")
bookNumberInputArea.place(x=5, y=68)
bookTitleInputArea = Text(root, height=1, width=45, bg="light yellow")
bookTitleInputArea.place(x=40, y=68)

# Creating the edit authors button
btnEditAnAuthor = Button(root, text="Save author edits (box 1 is the entry number; box 2 is the new author name)", command=edit_author, cursor="hand2")
btnEditAnAuthor.place(x=5, y=95)

# Creating input areas for editing authors
bookNumberAuthorInputArea = Text(root, height=1, width=3, bg="light yellow")
bookNumberAuthorInputArea.place(x=5, y=128)
bookAuthorInputArea = Text(root, height=1, width=20, bg="light yellow")
bookAuthorInputArea.place(x=40, y=128)

# Creating the edit type button
btnEditAType = Button(root, text="Save type edits (box 1 is the entry number; box 2 is the new type)", command=edit_type, cursor="hand2")
btnEditAType.place(x=5, y=155)

# Creating input areas for editing types
bookNumberTypeInputArea = Text(root, height=1, width=3, bg="light yellow")
bookNumberTypeInputArea.place(x=5, y=188)
bookTypeInputArea = Text(root, height=1, width=7, bg="light yellow")
bookTypeInputArea.place(x=40, y=188)

# Creating the edit ISBN button
btnEditAnISBN = Button(root, text="Save ISBN edits (box 1 is the entry number; box 2 is the new ISBN)", command=edit_isbn, cursor="hand2")
btnEditAnISBN.place(x=5, y=215)

# Creating input areas for editing ISBNs
bookNumberISBNInputArea = Text(root, height=1, width=3, bg="light yellow")
bookNumberISBNInputArea.place(x=5, y=248)
bookISBNInputArea = Text(root, height=1, width=13, bg="light yellow")
bookISBNInputArea.place(x=40, y=248)

# Creating the save new entry button
btnSaveNewEntry = Button(root, text="Save new entry", command=save_new_entry, cursor="hand2")
btnSaveNewEntry.place(x=5, y=308)

# Creating the input areas for the new entry button
bookText = Label(root, text="Name:")
bookText.place(x=5, y=341)
newTitle = Text(root, height=1, width=45, bg="light yellow")
newTitle.place(x=48, y=341)

authorText = Label(root, text="Author/director/creator:")
authorText.place(x=5, y=366)
newAuthor = Text(root, height=1, width=20, bg="light yellow")
newAuthor.place(x=140, y=366)

typeText = Label(root, text="Type:")
typeText.place(x=5, y=391)
newType = Text(root, height=1, width=7, bg="light yellow")
newType.place(x=42, y=391)

ISBNText = Label(root, text="ISBN (for books only):")
ISBNText.place(x=5, y=416)
newISBN = Text(root, height=1, width=13, bg="light yellow")
newISBN.place(x=127, y=416)

# Delete item button
deleteButton = Button(root, text="Delete item at position:", command=delete_entry)
deleteButton.place(x=5, y=473)
deletePosition = Text(root, height=1, width=3, bg="light yellow")
deletePosition.place(x=140, y=476)

# Nothing here
btnNothing = Button(root, text="?", command=secret_command, cursor="plus")
btnNothing.place(x=1520, y=770)

root.mainloop()
